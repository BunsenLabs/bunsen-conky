#!/bin/bash
#
#   Conky selection and switcher script
#
#   Written by <damo> April 2015
#
########################################################################
#
#   Conkys must be in $CONKYPATH
#   The name must end in "conky" or "conkyrc"
#
#   When the dialog opens, any running conkys will be checkmarked.
#
#   Click "OK" and all running conkys are stopped, and all checkmarked
#   conkys are started
#
#   To stop a conky just uncheck it, and "OK"
#
########################################################################

CONKYPATH="$HOME/.config/conky"
#CONKYPATH="/media/5/Conky"
#CONKYPATH="/media/5/conky"
#CONKYPATH="/media/5/S11_conky"
TEMPFILE="tmp/conky-tmp"

conkyRunning(){
    > $TEMPFILE #make blank tempfile
    if [ "$(pidof conky)" ];then
        ps aux | grep conky[rc] |  awk  '{print $2" "$NF}' >> tmp/conky-tmp
    fi
}

fillArrays(){
    num="$1"
    conkysPath[$num]="$2"   # full filepath to conky
    conkysArr[$num]="$3"    # displayed name, either "<name>conky(rc)" or containing dir if just "conkyrc"
    if grep -q "$2" "$TEMPFILE";then # if conky is running (read from tempfile)
        checkArr[$num]="TRUE"
    else
        checkArr[$num]="FALSE"
    fi
}

findConky(){
# search dirs for conkys files - looking for .conky or (.)conkyrc in the name
# if "*.conky(rc)" then display it
# if just "conkyrc" then it is the only one in the dir, so display the
# containing dir so the name is more descriptive

num=0
for x in `find $CONKYPATH -type f`
    do
        if [[ $x = *conkyrc ]] || [[ $x = *.conky ]];then
            CONKY=$(echo $x | awk -F'/' '{print $NF}')
            if [[ $CONKY = conkyrc ]];then
                CONKY=$(echo $x | awk -F'/' '{print $(NF-1)}')
            fi
            fillArrays $num $x $CONKY
            num=$(($num+1))
        fi
    done
}

# get conky directories in .conky, add to array
conkyRunning
findConky

# loop through arrays, and build msg text for zenity dialog
msg=""
for ((j=0; j<${#conkysArr[*]}; j++));do
    msg="$msg ${checkArr[j]} ${conkysArr[j]}"
done

## Populate zenity dialog from array, get return value(s)
RET=`zenity --list --title "BunsenLabs Conky" --checklist --width=300 --height=500 \
    --column "Select" --column "Conky Name" --separator=":"\
    $msg`

if [[ $? -eq 1 ]]; then # cancel button pressed
    exit 0
else    # loop through returned choices, add to array
    i=0
    IFS=":"     # separator is ":" in returned choices
    for name in $RET; do
        retConky[$i]=$name
        i=$(($i+1))
    done
    unset IFS;

    # kill all conkys
    if [ "$(pidof conky)" ];then
        killall conky
    fi

    for name in ${retConky[*]};do       # loop through checkmarked conky names
        for ((j=0; j<${#conkysPath[*]}; j++));do  # traverse through elements
            for f in ${conkysPath[j]};do
                conkyname=`basename $f`     # conky filename
                conkypath=`dirname $f`      # conky filepath
                DIR=`echo $f | awk -F"/" '{print $(NF-1)}'` # get directory containing the conky
                # see if it matches the returned name
                if [[ $conkyname == $name ]];then # it isn't just "conkyrc"
                    fpath="$conkypath/$conkyname"
                    conky -c "$fpath" & #start the conky
#                    sleep 0.5s
                elif [[ $conkyname == "conkyrc" ]];then
                    if [[ $DIR == $name ]];then # the containing dir was used as a descriptive name
                        fpath="$conkypath/$conkyname"
                        conky -c "$fpath" & #start the conky
#                        sleep 0.5s
                    fi
                fi
            done
        done
    done
fi
# I left this in for debugging. It could be changed to "rm -r $TEMPFILE"
conkyRunning    # update tempfile

exit